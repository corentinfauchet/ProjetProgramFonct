[debug] > Exec(;reload; set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers" ;*/*:dumpStructureTo C:/Users/coren/AppData/Local/Temp/sbt-structure.xml; session clear-all ; set ideaPort in Global := 61364, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.2 (Oracle Corporation Java 14.0.2)
[debug]       Load.loadUnit: plugins took 1164.751901ms
[debug]       Load.loadUnit: defsScala took 0.019999ms
[debug] [Loading] Scanning directory C:\Users\coren\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\coren\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 28.4229 ms
[debug]           Load.resolveProject(global-plugins) took 204.3362ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\coren\.sbt\1.0\plugins, plugins: List(<none>))) took 246.214399ms
[debug] [Loading] Done in C:\Users\coren\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 305.731801ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.056399ms
[debug]     Load.loadUnit(file:/C:/Users/coren/.sbt/1.0/plugins/, ...) took 1536.1744ms
[debug]   Load.apply: load took 1769.8766ms
[debug]   Load.apply: resolveProjects took 6.9737ms
[debug]   Load.apply: finalTransforms took 65.927ms
[debug]   Load.apply: config.delegates took 6.044901ms
[debug]   Load.apply: Def.make(settings)... took 467.9232ms
[debug]   Load.apply: structureIndex took 77.2583ms
[debug]   Load.apply: mkStreams took 0.0688ms
[info] loading global plugins from C:\Users\coren\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Forcing garbage collection...
[debug] Load.defaultLoad until apply took 8251.9431ms
[debug]           Load.loadUnit: plugins took 64.575701ms
[debug]           Load.loadUnit: defsScala took 0.0056ms
[debug] [Loading] Scanning directory C:\Users\coren\Documents\HEI\HEI5\Scala\Projet\ProjetProgramFonct\projet-scala\project
[debug]             Load.loadUnit: mkEval took 2.2988ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\coren\Documents\HEI\HEI5\Scala\Projet\ProjetProgramFonct\projet-scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 7.255899 ms
[info] loading settings for project projet-scala-build from idea.sbt ...
[debug]               Load.resolveProject(projet-scala-build) took 5.633601ms
[debug]             Load.loadTransitive: finalizeProject(Project(id projet-scala-build, base: C:\Users\coren\Documents\HEI\HEI5\Scala\Projet\ProjetProgramFonct\projet-scala\project, plugins: List(<none>))) took 14.761699ms
[debug] [Loading] Done in C:\Users\coren\Documents\HEI\HEI5\Scala\Projet\ProjetProgramFonct\projet-scala\project, returning: (projet-scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2312.7726ms
[debug]           Load.loadUnit: cleanEvalClasses took 8.472ms
[debug]         Load.loadUnit(file:/C:/Users/coren/Documents/HEI/HEI5/Scala/Projet/ProjetProgramFonct/projet-scala/project/, ...) took 2387.8897ms
[debug]       Load.apply: load took 2392.6041ms
[debug]       Load.apply: resolveProjects took 1.1334ms
[debug]       Load.apply: finalTransforms took 20.322399ms
[debug]       Load.apply: config.delegates took 0.945ms
[debug]       Load.apply: Def.make(settings)... took 137.2797ms
[debug]       Load.apply: structureIndex took 40.2183ms
[debug]       Load.apply: mkStreams took 0.048501ms
[info] loading project definition from C:\Users\coren\Documents\HEI\HEI5\Scala\Projet\ProjetProgramFonct\projet-scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3510.6387ms
[debug]     Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory C:\Users\coren\Documents\HEI\HEI5\Scala\Projet\ProjetProgramFonct\projet-scala
[debug]       Load.loadUnit: mkEval took 1.398999ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\coren\Documents\HEI\HEI5\Scala\Projet\ProjetProgramFonct\projet-scala, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 6.23 ms
[info] loading settings for project projet-scala from build.sbt ...
[debug]         Load.resolveProject(projet-scala) took 85.8875ms
[debug]       Load.loadTransitive: finalizeProject(Project(id projet-scala, base: C:\Users\coren\Documents\HEI\HEI5\Scala\Projet\ProjetProgramFonct\projet-scala, plugins: List(<none>))) took 92.9062ms
[debug] [Loading] Done in C:\Users\coren\Documents\HEI\HEI5\Scala\Projet\ProjetProgramFonct\projet-scala, returning: (projet-scala)
[debug]     Load.loadUnit: loadedProjectsRaw took 1170.8087ms
[debug]     Load.loadUnit: cleanEvalClasses took 63.9666ms
[debug]   Load.loadUnit(file:/C:/Users/coren/Documents/HEI/HEI5/Scala/Projet/ProjetProgramFonct/projet-scala/, ...) took 4747.3072ms
[debug] Load.apply: load took 4753.8399ms
[debug] Load.apply: resolveProjects took 0.1716ms
[debug] Load.apply: finalTransforms took 49.511001ms
[debug] Load.apply: config.delegates took 1.0995ms
[debug] Load.apply: Def.make(settings)... took 336.534101ms
[debug] Load.apply: structureIndex took 28.857099ms
[debug] Load.apply: mkStreams took 0.009099ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to projet-scala (in build file:/C:/Users/coren/Documents/HEI/HEI5/Scala/Projet/ProjetProgramFonct/projet-scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers", None, None)
[info] Defining Global / sbtStructureOptions
[info] The new value will be used by Global / ssOptions
[debug] Defining 
[debug] 	Global / sbtStructureOptions
[debug] 
[debug] The new value will be used by 
[debug] 	Global / ssOptions
[info] Reapplying settings...
[info] set current project to projet-scala (in build file:/C:/Users/coren/Documents/HEI/HEI5/Scala/Projet/ProjetProgramFonct/projet-scala/)
[debug] > Exec(*/*:dumpStructureTo C:/Users/coren/AppData/Local/Temp/sbt-structure.xml, None, None)
[debug] Evaluating tasks: Global / dumpStructureTo
[warn] sbt 0.13 shell syntax is deprecated; use slash syntax instead: Global / dumpStructureTo
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] Writing structure to C:\Users\coren\AppData\Local\Temp\sbt-structure.xml...
[info] Done.
[success] Total time: 1 s, completed 1 nov. 2021 à 16:12:22
[debug] > Exec(session clear-all, None, None)
[info] Reapplying settings...
[info] set current project to projet-scala (in build file:/C:/Users/coren/Documents/HEI/HEI5/Scala/Projet/ProjetProgramFonct/projet-scala/)
[debug] > Exec(set ideaPort in Global := 61364, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to projet-scala (in build file:/C:/Users/coren/Documents/HEI/HEI5/Scala/Projet/ProjetProgramFonct/projet-scala/)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
